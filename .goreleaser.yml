project_name: c8y

release:
  prerelease: auto
  draft: true # we only publish after the Windows MSI gets uploaded
  name_template: "Cumulocity CLI {{.Version}}"

before:
  hooks:
    - go mod tidy
    - task generate_go_code
    - task manpages
    - task build_completions
    - task checkout_addons

builds:
  - <<: &build_defaults
      binary: 'bin/{{ if index .Env "BINARY_INCLUDE_VERSION" }}{{ .ProjectName }}_{{ .RawVersion }}_{{ if eq .Os "darwin" }}macOS{{ else }}{{ .Os }}{{ end }}_{{ .Arch }}{{ else }}{{ .ProjectName }}{{ end }}'
      main: ./cmd/c8y/main.go
      ldflags:
        - -s -w -X github.com/reubenmiller/go-c8y-cli/pkg/cmd.buildVersion={{.Version}} -X github.com/reubenmiller/go-c8y-cli/pkg/cmd.buildBranch={{.Branch}}
    id: macos
    goos: [darwin]
    goarch: [amd64, arm64]

  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: ["386", arm, amd64, arm64]
    goarm:
    - "5"
    - "6"
    - "7"
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: ["386", amd64]

archives:
  - id: nix
    builds: [linux]
    <<: &archive_defaults
      name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: "true"
    format: tar.gz
    files:
      - LICENSE
      - ./share/man/man1/c8y*.1
      - .go-c8y-cli/README.md
      - .go-c8y-cli/install.*
      - .go-c8y-cli/settings.*
      - .go-c8y-cli/shell
      - .go-c8y-cli/templates
      - .go-c8y-cli/views

  - id: homebrew
    builds: [macos]
    <<: *archive_defaults
    wrap_in_directory: "true"
    replacements:
      darwin: macOS
    format: tar.gz
    files:
      - LICENSE
      - ./share/man/man1/c8y*.1
      - .go-c8y-cli/README.md
      - .go-c8y-cli/install.*
      - .go-c8y-cli/settings.*
      - .go-c8y-cli/shell
      - .go-c8y-cli/templates
      - .go-c8y-cli/views

  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: "false"
    format: zip
    files:
      - LICENSE
      - .go-c8y-cli/README.md
      - .go-c8y-cli/install.*
      - .go-c8y-cli/settings.*
      - .go-c8y-cli/shell
      - .go-c8y-cli/templates
      - .go-c8y-cli/views
  
  - id: plainBinaries
    builds: [macos, linux, windows]
    # Don't include the binary in the filename so it is easier to download the latest
    <<: &archive_defaults
      name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    replacements:
      darwin: macOS
    format: binary

nfpms:
  - 
    # id: go-c8y-cli
    package_name: go-c8y-cli
    license: MIT
    maintainer: Reuben Miller <reuben.d.miller@gmail.com>
    homepage: http://goc8ycli.netlify.app
    bindir: /usr/local
    description: Cumulocity's unofficial command line tool
    section: utils
    priority: optional
    file_name_template: "{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    formats:
      - deb
      - rpm
      - apk
    # Packages your package suggests installing.
    suggests:
      - jq
      - git

    contents:
      # Man pages
      - src: "./share/man/man1/c8y*.1"
        dst: "/usr/share/man/man1"

      # Completions
      - src: ./output/bash/c8y
        dst: /etc/bash_completion.d/c8y
      
      - src: ./output/zsh/_c8y
        dst: /usr/local/share/zsh/site-functions/_c8y
      
      - src: ./output/fish/c8y.fish
        dst: /usr/share/fish/vendor_completions.d/c8y.fish
      
      # Addons
      - src: .go-c8y-cli/settings.*
        dst: /etc/go-c8y-cli/
        type: config|noreplace
      
      - src: .go-c8y-cli/shell
        dst: /etc/go-c8y-cli/shell
        type: config

      - src: .go-c8y-cli/templates
        dst: /etc/go-c8y-cli/templates
        type: config
      
      - src: .go-c8y-cli/views
        dst: /etc/go-c8y-cli/views
        type: config

brews:
  -
    # Package name
    name: go-c8y-cli

    # IDs of the archives to use.
    ids:
      - homebrew
      - nix

    # GOARM to specify which 32-bit arm version to use if there are multiple versions
    # from the build section. Brew formulas support atm only one 32-bit version.
    # Default is 6 for all artifacts or each id if there a multiple versions.
    goarm: "6"

    # GitHub/GitLab repository to push the formula to
    tap:
      owner: reubenmiller
      name: homebrew-go-c8y-cli
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Template for the url which is determined by the given Token
    url_template: "https://github.com/reubenmiller/go-c8y-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: reuben.d.miller@gmail.com

    # Folder inside the repository to put the formula.
    folder: Formula

    # Caveats for the user of your binary.
    caveats: |
      Please add the following to your shell profile to enable usage of "set-session" and other helpful c8y utility functions

      bash: ~/.bashrc

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.sh"

      zsh: ~/.zshrc

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.zsh"

      fish: ~/.config/fish/config.fish

        source "#{etc}/go-c8y-cli/shell/c8y.plugin.fish"

      powershell: ~/.config/powershell/Microsoft.PowerShell_profile.ps1
        . "#{etc}/go-c8y-cli/shell/c8y.plugin.ps1"

      You will also need to force reload of your profile:

        source <profile>

    homepage: "https://goc8ycli.netlify.app/"
    description: "Cumulocity's unofficial command line tool"
    license: "MIT"

    dependencies:
      - name: git
        type: optional
      - name: jq
        type: optional
      - name: zsh
        type: optional
      - name: bash
        type: optional
      - name: fish
        type: optional

    # So you can `brew test` your formula.
    test: |
      system "#{bin}/c8y version --select version"

    install: |
      bin.install "bin/c8y"
      man1.install Dir["share/man/man1/*"]
      
      config_dir = etc/"go-c8y-cli"

      if config_dir.exist?
        # FileUtils.rm_r etc/"go-c8y-cli"
        system "git", "-C", config_dir, "pull", "--ff-only"
      else
        system "git", "clone", "--depth", "1", "https://github.com/reubenmiller/go-c8y-cli-addons.git", config_dir
      end

      # Add completions
      output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/c8y", "completion", "bash")
      (bash_completion/"c8y").write output
      output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/c8y", "completion", "zsh")
      (zsh_completion/"_c8y").write output
      output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/c8y", "completion", "fish")
      (fish_completion/"c8y.fish").write output
