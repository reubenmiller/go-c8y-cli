name: build

on:
  push:
    branches: [ master, develop ]
    paths-ignore:
      - docs/*
      - '**/*.md'
      - test/*.go

  pull_request:
    branches: [ master, develop ]

jobs:

  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Build cli
      run: make build
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        name: c8y.windows.amd64
        path: tools/PSc8y/Dependencies/c8y.windows*

    - uses: actions/upload-artifact@v2
      with:
        name: c8y.linux.amd64
        path: tools/PSc8y/Dependencies/c8y.linux*

    - uses: actions/upload-artifact@v2
      with:
        name: c8y.macos.amd64
        path: tools/PSc8y/Dependencies/c8y.macos*

    - uses: actions/upload-artifact@v2
      with:
        name: PSc8y Module
        path: tools/PSc8y/dist/PSc8y.zip

  test:
    runs-on: ${{ matrix.os }}
    needs: [build]
    env:
      C8Y_HOST: ${{ secrets.C8Y_HOST }}
      C8Y_TENANT: ${{ secrets.C8Y_TENANT }}
      C8Y_USER: ${{ secrets.C8Y_USER }}
      C8Y_PASSWORD: ${{ secrets.C8Y_PASSWORD }}

      # Max timeout for each request (in milliseconds)
      C8Y_TIMEOUT: 30000

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Build powershell module
      run: make build
      shell: bash

    - name: Test powershell module
      if: ${{ true }}
      run: make test
      shell: bash
      timeout-minutes: 30

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: tools/PSc8y/reports/*.xml

  publish-test-results:
    runs-on: ubuntu-18.04
    needs: [test]
    # Disabled as pester does not support junit reports (only nunit)
    if: always() && false
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]
    steps:
      - name: Get test results
        uses: actions/download-artifact@v2
        with:
          name: test-results-${{ matrix.os }}
          path: test-results-${{ matrix.os }}

      - name: Publish results
        uses: EnricoMi/publish-unit-test-result-action@v1.1
        if: always()
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: test-results-${{ matrix.os }}/*.xml
          log_level: DEBUG
