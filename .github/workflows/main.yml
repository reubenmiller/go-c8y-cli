name: build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - docs/*
      - '**/*.md'
      - test/*.go

  pull_request:
    branches: [ master ]


jobs:

  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Build cli
      run: make build
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        name: c8y-cli-binaries
        path: tools/PSc8y/Dependencies/c8y*


  test:
    runs-on: ${{ matrix.os }}
    needs: [build]
    env:
      C8Y_HOST: ${{ secrets.C8Y_HOST }}
      C8Y_TENANT: ${{ secrets.C8Y_TENANT }}
      C8Y_USER: ${{ secrets.C8Y_USER }}
      C8Y_PASSWORD: ${{ secrets.C8Y_PASSWORD }}

      # Max timeout for each request (in milliseconds)
      C8Y_TIMEOUT: 30000

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Build powershell module
      run: make build_powershell
      shell: bash

    - name: Test powershell module
      if: ${{ false }}
      run: make test_powershell
      shell: bash

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-results
        path: report.xml


  publish-test-results:
    runs-on: ubuntu-18.04
    needs: [test]
    steps:
      - name: Get test results
        uses: actions/download-artifact@v2
        with:
          name: test-results

      - name: Publish results
        uses: EnricoMi/publish-unit-test-result-action@v1.1
        if: always()
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report.xml
          log_level: DEBUG


  build-and-publish-latest:
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/master' # Running this job only for master branch

    steps:
    - uses: actions/checkout@v2 # Checking out the repo

    - name: Build docker images
      run: |
        TAG_PREFIX="ghcr.io/${GITHUB_REPOSITORY}/"
        make TAG_PREFIX=$TAG_PREFIX build_docker

    - name: Publish c8ycli pwsh docker image
      uses: VaultVulp/gp-docker-action@1.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        image-name: c8ycli-pwsh
        # extract-git-tag: true

    - name: Publish c8ycli zsh docker image
      uses: VaultVulp/gp-docker-action@1.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        image-name: c8ycli-zsh
        # extract-git-tag: true

    - name: Publish c8ycli bash docker image
      uses: VaultVulp/gp-docker-action@1.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        image-name: c8ycli-bash
        # extract-git-tag: true


  publish-nuget:
    runs-on: ubuntu-18.04
    needs: [test]
    env:
      nuget_apikey: ${{ secrets.NUGET_API_KEY }}
    steps:
    - uses: actions/checkout@v2

    - name: Build Powershell Module
      run: make build_powershell

    - name: Publish Powershell Module (PSc8y)
      run: make publish
