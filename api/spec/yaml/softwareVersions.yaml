
---
information:
  name: software/versions
  description: Cumulocity software version management
  descriptionLong: 'REST endpoint to interact with Cumulocity software versions'
  link: https://cumulocity.com/guides/reference/inventory/

endpoints:
  - name: getSoftwareVersionCollection
    method: GET
    description: Get software package version collection
    descriptionLong: Get a collection of software package versions (managedObjects) based on filter parameters
    path: inventory/managedObjects?query=$filter=((not(has(c8y_Patch)))%20and%20(bygroupid({softwareId})))%20$orderby=creationTime.date%20desc,creationTime%20desc
    accept: application/vnd.com.nsn.cumulocity.managedObjectCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: managedObjects
    alias:
        go: list
        powershell: Get-SoftwareVersionCollection
    examples:
      powershell:
        - description: Get a list of software package versions
          command: Get-SoftwareVersionCollection -SoftwareId 12345

      go:
        - description: Get a list of software package versions
          command: c8y software versions list --softwareId 12345

        - description: Get a list of software package versions from multiple software packages
          command: c8y software list | c8y software versions list
    pathParameters:
      - name: softwareId
        type: '[]software'
        pipeline: true
        required: false
        pipelineAliases:
          - additionParents.references.0.managedObject.id
          - id
        description: Software package id

    queryParameters:
      - name: withParents
        type: booleanDefault
        description: Include parent references
        default: 'true'

  - name: deleteSoftwareVersion
    description: Delete software package version
    descriptionLong: Delete an existing software package version
    method: DELETE
    path: inventory/managedObjects/{id}
    accept: ''
    alias:
        go: delete
        powershell: Remove-SoftwareVersion
    examples:
      powershell:
        - description: Delete a software package
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Remove-SoftwareVersion -Id $mo.id
          afterEach:
            - Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue

        - description: Delete a software package (using pipeline)
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id | Remove-SoftwareVersion
          afterEach:
            - Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue

        - description: Delete a software package and all related versions
          beforeEach:
            - $Device = PSc8y\New-TestDevice
          command: Get-ManagedObject -Id $Device.id | Remove-SoftwareVersion -ForceCascade:$false
          afterEach:
            - Remove-ManagedObject -Id $Device.id -ErrorAction SilentlyContinue
            - Remove-ManagedObject -Id $ChildDevice.id -ErrorAction SilentlyContinue

      go:
        - description: Delete a software package and all related versions
          command: c8y software versions delete --id 22222

        - description: Delete a software package (but keep any child binaries)
          command: c8y software versions delete --id 12345 --forceCascade=false
    pathParameters:
      - name: id
        type: '[]softwareversion'
        pipeline: true
        required: true
        description: Software Package version (managedObject) id
      # Dummy value (to limit versions to the given package)
      - name: softwareId
        type: '[]software'
        required: false
        description: Software package id (used to help completion be more accurate)

    queryParameters:
      - name: forceCascade
        type: booleanDefault
        default: 'true'
        description: Remove version and any related binaries
