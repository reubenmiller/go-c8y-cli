# yaml-language-server: $schema=../schema.json
---

group:
  name: userGroups
  description: Cumulocity user groups
  descriptionLong: 'REST endpoint to interact with Cumulocity user groups'
  link: https://cumulocity.com/guides/reference/users/#user-reference-collection

commands:
  - name: getUserGroupCollection
    description: Get user group collection
    descriptionLong: Get collection of (user) groups
    method: GET
    path: /user/{tenant}/groups
    accept: application/vnd.com.nsn.cumulocity.groupCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.group+json
    collectionProperty: .groups[]
    alias:
        go: list
        powershell: Get-UserGroupCollection
    examples:
      powershell:
        - description: Get a list of user groups for the current tenant
          command: Get-UserGroupCollection
      go:
        - description: Get a list of user groups for the current tenant
          command: c8y usergroups list
    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant


  - name: createUserGroup
    description: Create user group
    descriptionLong: Create a new user group
    method: POST
    path: /user/{tenant}/groups
    accept: application/vnd.com.nsn.cumulocity.group+json
    alias:
        go: create
        powershell: New-UserGroup
    examples:
      powershell:
        - description: Create a user group
          beforeEach:
            - $GroupName = "testgroup_" + [guid]::NewGuid().Guid.Substring(1,10)
          command: New-UserGroup -Name "$GroupName"
          afterEach:
            - Get-UserGroupByName -Name "$GroupName" | Remove-UserGroup

      go:
        - description: Create a user group
          command: c8y usergroups create --name customGroup1
    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant
        position: 99

    body:
      - name: name
        type: string
        description: Group name
        pipeline: true
        pipelineAliases:
          - "name"

      - name: deviceProperties
        type: string[]
        description: List of device permissions

      - name: data
        type: json
        description: Additional properties

  - name: getUserGroup
    description: Get user group
    descriptionLong: Get an existing user group
    method: GET
    path: /user/{tenant}/groups/{id}
    accept: application/vnd.com.nsn.cumulocity.group+json
    alias:
        go: get
        powershell: Get-UserGroup
    examples:
      powershell:
        - description: Get a user group
          beforeEach:
            - $Group = New-TestUserGroup
          command: Get-UserGroup -Id $Group.id
          afterEach:
            - Remove-UserGroup -Id $Group.id

      go:
        - description: Get a user group
          command: c8y usergroups get --id 12345
    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant
        position: 99

      - name: id
        type: usergroup[]
        pipeline: true
        description: Group id

  - name: getUserGroupByName
    description: Get user group by name
    descriptionLong: Get an existing user group by name
    method: GET
    path: /user/{tenant}/groupByName/{name}
    accept: application/vnd.com.nsn.cumulocity.group+json
    alias:
        go: getByName
        powershell: Get-UserGroupByName
    examples:
      powershell:
        - description: Get user group by its name
          beforeEach:
            - $Group = New-TestUserGroup
          command: Get-UserGroupByName -Name $Group.name
          afterEach:
            - Remove-UserGroup -Id $Group.id

      go:
        - description: Get user group by its name
          command: c8y usergroups getByName --name customGroup1
    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant
        position: 99

      - name: name
        type: string
        description: Group name
        pipeline: true
        pipelineAliases:
          - "name"

  - name: deleteUserGroup
    description: Delete user group
    descriptionLong: Delete an existing user group
    method: DELETE
    path: /user/{tenant}/groups/{id}
    alias:
        go: delete
        powershell: Remove-UserGroup
    examples:
      powershell:
        - description: Delete a user group
          beforeEach:
            - $Group = New-TestUserGroup
          command: Remove-UserGroup -Id $Group.id

        - description: Delete a user group (using pipeline)
          beforeEach:
            - $Group = New-TestUserGroup
          command: Get-UserGroupByName -Name $Group.name | Remove-UserGroup

      go:
        - description: Delete a user group
          command: c8y usergroups delete --id 12345
    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant
        position: 99

      - name: id
        type: usergroup[]
        required: true
        pipeline: true
        description: Group id

  - name: updateUserGroup
    description: Update user group
    descriptionLong: Update an existing user group
    method: PUT
    path: /user/{tenant}/groups/{id}
    accept: application/vnd.com.nsn.cumulocity.group+json
    alias:
        go: update
        powershell: Update-UserGroup
    examples:
      powershell:
        - description: Update a user group
          beforeEach:
            - $Group = New-TestUserGroup
            - $GroupName = New-RandomString -Prefix "customGroup2"
          command: Update-UserGroup -Id $Group -Name $GroupName
          afterEach:
            - Remove-UserGroup -Id $Group.id

        - description: Update a user group (using pipeline)
          beforeEach:
            - $Group = New-TestUserGroup
            - $NewGroupName = New-RandomString -Prefix "newCustomGroup2"
          command: Get-UserGroupByName -Name $Group.name | Update-UserGroup -Name $NewGroupName
          afterEach:
            - Remove-UserGroup -Id $Group.id
      go:
        - description: Update a user group
          command: c8y usergroups update --id 12345 --name "customGroup2"
        
        - description: Update a user group with custom properties
          command: |
            c8y usergroups update --id 12345 --name "customGroup2" --template "{example: 'value'}"
          assertStdOut:
            json:
              body.example: value

    pathParameters:
      - name: tenant
        type: tenant
        description: Tenant
        position: 99

      - name: id
        type: usergroup[]
        required: true
        pipeline: true
        description: Group id
    body:
      - name: name
        type: string
        description: name

      - name: data
        type: json
        description: Additional properties.
