# yaml-language-server: $schema=../schema.json
---
information:
  name: inventory
  description: Cumulocity managed objects
  descriptionLong: 'REST endpoint to interact with Cumulocity managed objects'
  link: https://cumulocity.com/guides/reference/inventory/

endpoints:
  - name: getManagedObjectCollection
    method: GET
    description: Get managed object collection
    descriptionLong: Get a collection of managedObjects based on filter parameters
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.managedObjectCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: managedObjects
    alias:
        go: list
        powershell: Get-ManagedObjectCollection
    examples:
      powershell:
        - description: Get a list of managed objects
          command: Get-ManagedObjectCollection

        - description: Get a list of managed objects by id
          beforeEach:
            - $Device1 = New-TestDevice
            - $Device2 = New-TestDevice
          command: Get-ManagedObjectCollection -Ids $Device1.id, $Device2.id
          afterEach:
            - Remove-ManagedObject -Id $Device1.id
            - Remove-ManagedObject -Id $Device2.id

      go:
        - description: Get a list of managed objects
          command: c8y inventory list

        - description: Get a list of managed objects by ids
          command: c8y inventory list --ids 1111,2222
        
        - description: Search by type using pipeline. piped input will be mapped to type parameter
          command: echo 'myType' | c8y inventory list

        - description: Get managed objects which have the same type as the managed object id=1234. piped input will be mapped to type parameter
          command: c8y inventory get --id 1234 | c8y inventory list

    queryParameters:
      - name: ids
        type: '[]stringcsv'
        property: ids
        description: List of ids.

      - name: type
        type: string
        pipeline: true
        pipelineAliases:
          - "type"
        required: false
        description: ManagedObject type.

      - name: fragmentType
        type: string
        description: ManagedObject fragment type.

      - name: owner
        type: string
        description: List of managed objects that are owned by the given username.

      - name: text
        type: string
        description: managed objects containing a text value starting with the given text (placeholder {text}). Text value is any alphanumeric string starting with a latin letter (A-Z or a-z).

      - name: onlyRoots
        type: boolean
        description: When set to `true` it returns managed objects which don't have any parent. If the current user doesn't have access to the parent, this is also root for the user
      
      - name: childAdditionId
        type: string
        description: Search for a specific child addition and list all the groups to which it belongs.
      
      - name: childAssetId
        type: string
        description: Search for a specific child asset and list all the groups to which it belongs.

      - name: childDeviceId
        type: '[]device'
        description: Search for a specific child device and list all the groups to which it belongs.

      - name: skipChildrenNames
        type: boolean
        description: Don't include the child devices names in the response. This can improve the API response because the names don't need to be retrieved
      
      - name: withParents
        type: boolean
        description: include a flat list of all parents and grandparents of the given object
      
      - name: withChildren
        type: boolean
        description: Determines if children with ID and name should be returned when fetching the managed object. Set it to false to improve query performance.
      
      - name: withGroups
        type: boolean
        description: When set to true it returns additional information about the groups to which the searched managed object belongs. This results in setting the assetParents property with additional information about the groups.

  - name: count
    description: Get managed object count
    descriptionLong: Retrieve the total number of managed objects (e.g. devices, assets, etc.) registered in your tenant, or a subset based on queries.
    method: GET
    path: inventory/managedObjects/count
    accept: application/vnd.com.nsn.cumulocity.managedobjectuser+json
    alias:
        go: count
        powershell: Get-ManagedObjectCount
    examples:
      powershell:
        - description: Get count of managed objects
          command: Get-ManagedObjectCount
      go:
        - description: Get count of managed objects
          command: c8y inventory count
        
        - description: Get count of managed objects matching text (using Cumulocity text search algorithm)
          command: c8y inventory count --text myname
        
        - description: Get count of managed objects with a specific type value
          command: c8y inventory count --type "c8y_Sensor"

        - description: Get count of managed objects with a specific type value and owner
          command: c8y inventory count --type "c8y_Sensor" --owner "device_mylinuxbox01"
        
        - description: Get total number of devices
          command: c8y inventory count --fragmentType "c8y_IsDevice"

    queryParameters:
      - name: ids
        type: '[]stringcsv'
        property: ids
        description: List of ids.

      - name: type
        type: string
        pipeline: true
        pipelineAliases:
          - "type"
        required: false
        description: ManagedObject type.

      - name: fragmentType
        type: string
        description: ManagedObject fragment type.

      - name: owner
        type: string
        description: List of managed objects that are owned by the given username.

      - name: text
        type: string
        description: managed objects containing a text value starting with the given text (placeholder {text}). Text value is any alphanumeric string starting with a latin letter (A-Z or a-z).

      - name: childAdditionId
        type: string
        description: Search for a specific child addition and list all the groups to which it belongs.
      
      - name: childAssetId
        type: string
        description: Search for a specific child asset and list all the groups to which it belongs.

      - name: childDeviceId
        type: '[]device'
        description: Search for a specific child device and list all the groups to which it belongs.



  - name: findByTextManagedObjectCollection
    method: GET
    description: Find managed object by text collection
    descriptionLong: Find a collection of managedObjects which match a given text value
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.managedObjectCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: managedObjects
    alias:
        go: findByText
        powershell: Find-ByTextManagedObjectCollection
    examples:
      powershell:
        - description: Find a list of managed objects by text
          beforeEach:
            - $Device1 = New-TestDevice
          command: Find-ByTextManagedObjectCollection -Text $Device1.name
          afterEach:
            - Remove-ManagedObject -Id $Device1.id

        - description: Find managed objects which contain the text 'myText' (using pipeline)
          beforeEach:
            - $Device1 = New-TestDevice
          command: Find-ByTextManagedObjectCollection -Text $Device1.name
          afterEach:
            - Remove-ManagedObject -Id $Device1.id

      go:
        - description: Get a list of managed objects
          command: c8y inventory findByText --text "myText"

        - description: Find managed objects which contain the text 'myText' (using pipeline)
          command: echo "myText" | c8y inventory findByText
        
        - description: Find managed objects which contain the text 'myText' and is a device (using pipeline)
          command: echo "myText" | c8y inventory findByText --fragmentType c8y_IsDevice

    queryParameters:
      - name: text
        type: string
        pipeline: true
        required: true
        description: managed objects containing a text value starting with the given text (placeholder {text}). Text value is any alphanumeric string starting with a latin letter (A-Z or a-z).

      - name: type
        type: string
        description: ManagedObject type.

      - name: fragmentType
        type: string
        description: ManagedObject fragment type.

      - name: withParents
        type: boolean
        description: include a flat list of all parents and grandparents of the given object

      - name: skipChildrenNames
        type: boolean
        description: Don't include the child devices names in the response. This can improve the API response because the names don't need to be retrieved


  - name: findManagedObjectCollection
    method: GET
    description: Find managed object collection
    descriptionLong: Get a collection of managedObjects based on the Cumulocity query language
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.managedObjectCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: managedObjects
    alias:
        go: find
        powershell: Find-ManagedObjectCollection
    examples:
      powershell:
        - description: Find all managed objects with their names starting with 'roomUpperFloor_'
          beforeEach:
            - $Device = New-TestDevice -Name "roomUpperFloor_"
          command: Find-ManagedObjectCollection -Query "name eq 'roomUpperFloor_*'"
          afterEach:
            - Remove-ManagedObject -Id $Device.id

      go:
        - description: Get a list of managed objects
          command: c8y inventory find --query "name eq 'roomUpperFloor_*'"
          skipTest: true

        - description: Find managed objects which include myname in their names. query=$filter=name eq '*myname*'
          command: echo "myname" | c8y inventory find --queryTemplate "name eq '*%s*'"
          skipTest: true

        - description: Invert a given query received via piped input (stdin) by using a template
          command: echo "name eq 'name'" | c8y inventory find --queryTemplate 'not(%s)'
          skipTest: true

    queryParameters:
      - name: query
        description: Query expression group
        property: query
        type: queryExpression
        children:
          - name: query
            type: string
            description: ManagedObject query
            format: (%s)
            required: false
            pipeline: true
            pipelineAliases:
              - "c8y_DeviceQueryString"
          
          - name: queryTemplate
            type: string
            description: String template to be used when applying the given query. Use %s to reference the query/pipeline input
          
          - name: orderBy
            type: string
            description: Order by. e.g. _id asc or name asc or creationTime.date desc

          - name: name
            type: string
            description: Filter by name
            format: (name eq '%s')

          - name: type
            type: string
            description: Filter by type
            format: (type eq '%s')

          - name: agents
            type: booleanDefault
            description: Only include agents
            value: 'has(com_cumulocity_model_Agent)'

          - name: fragmentType
            type: string
            description: Filter by fragment type
            format: has(%s)

          - name: owner
            type: string
            description: Filter by owner
            format: (owner eq '%s')

          - name: availability
            type: string
            description: Filter by c8y_Availability.status
            format: (c8y_Availability.status eq '%s')
            validationSet:
              - AVAILABLE
              - UNAVAILABLE
              - MAINTENANCE

          - name: lastMessageDateTo
            type: datetime
            description: Filter c8y_Availability.lastMessage to a specific date
            format: (c8y_Availability.lastMessage le '%s')

          - name: lastMessageDateFrom
            type: datetime
            description: Filter c8y_Availability.lastMessage from a specific date
            format: (c8y_Availability.lastMessage ge '%s')

          - name: creationTimeDateTo
            type: datetime
            description: Filter creationTime.date to a specific date
            format: (creationTime.date le '%s')

          - name: creationTimeDateFrom
            type: datetime
            description: Filter creationTime.date from a specific date
            format: (creationTime.date ge '%s')

          - name: group
            type: '[]devicegroup'
            description: Filter by group inclusion
            format: bygroupid(%s)

          - name: onlyDevices
            type: booleanDefault
            hidden: true
            description: Only include devices (deprecated)
            value: 'has(c8y_IsDevice)'

      - name: withParents
        type: boolean
        description: include a flat list of all parents and grandparents of the given object

  - name: newManagedObject
    method: POST
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.inventory+json
    description: Create managed object
    descriptionLong: Create a new inventory managed object
    alias:
        go: create
        powershell: New-ManagedObject
    examples:
      powershell:
        - description: Create a managed object
          beforeEach:
            - $type = New-RandomString -Prefix "customType_"
          command: New-ManagedObject -Name "testMO" -Type $type -Data @{ custom_data = @{ value = 1 } }
          afterEach:
            - Get-ManagedObjectCollection -Type $type | Remove-ManagedObject

      go:
        - description: Create a managed object
          command: c8y inventory create --name "testMO" --type "custom_type"
    body:
      - name: name
        type: string
        pipeline: true
        required: false
        description: name
        pipelineAliases:
          - "name"

      - name: type
        type: string
        required: false
        description: type

      - name: data
        type: json
        description: Additional properties of the inventory.

  - name: getManagedObject
    description: Get managed objects
    descriptionLong: Get an existing managed object
    method: GET
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.inventory+json
    alias:
        go: get
        powershell: Get-ManagedObject
    examples:
      powershell:
        - description: Get a managed object
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id
          afterEach:
            - Remove-ManagedObject -Id $mo.id

        - description: Get a managed object (using pipeline)
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id | Get-ManagedObject
          afterEach:
            - Remove-ManagedObject -Id $mo.id

        - description: Get a managed object with parent references
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id -WithParents
          afterEach:
            - Remove-ManagedObject -Id $mo.id

      go:
        - description: Get a managed object
          command: c8y inventory get --id 12345

        - description: Get a managed object with parent references
          command: c8y inventory get --id 12345 --withParents

    pathParameters:
      - name: id
        type: '[]id'
        pipeline: true
        required: true
        description: ManagedObject id
        pipelineAliases:
          - "deviceId"
          - "source.id"
          - "managedObject.id"

    queryParameters:
      - name: skipChildrenNames
        type: boolean
        description: Don't include the child devices names in the response. This can improve the API response because the names don't need to be retrieved
      
      - name: withParents
        type: boolean
        description: include a flat list of all parents and grandparents of the given object
      
      - name: withChildren
        type: boolean
        description: Determines if children with ID and name should be returned when fetching the managed object. Set it to false to improve query performance.

  - name: updateManagedObject
    method: PUT
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.inventory+json
    description: Update inventory
    descriptionLong: Update an existing managed object
    alias:
        go: update
        powershell: Update-ManagedObject
    examples:
      powershell:
        - description: Update a managed object
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Update-ManagedObject -Id $mo.id -Data @{ com_my_props = @{ value = 1 } }
          afterEach:
            - Remove-ManagedObject -Id $mo.id

        - description: Update a managed object (using pipeline)
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id | Update-ManagedObject -Data @{ com_my_props = @{ value = 1 } }
          afterEach:
            - Remove-ManagedObject -Id $mo.id

      go:
        - description: Update a managed object
          command: 'c8y inventory update --id 12345 --newName "my_custom_name" --data "{\"com_my_props\":{},\"value\":1}"'
    body:
      - name: newName
        property: name
        type: string
        required: false
        description: name

      - name: data
        type: json
        description: Additional properties of the inventory.

    pathParameters:
      - name: id
        type: '[]id'
        pipeline: true
        description: ManagedObject id
        required: true
        pipelineAliases:
          - "deviceId"
          - "source.id"
          - "managedObject.id"

  - name: deleteManagedObject
    description: Delete managed object
    descriptionLong: Delete an existing managed object
    method: DELETE
    path: inventory/managedObjects/{id}
    accept: ''
    alias:
        go: delete
        powershell: Remove-ManagedObject
    examples:
      powershell:
        - description: Delete a managed object
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Remove-ManagedObject -Id $mo.id
          afterEach:
            - Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue

        - description: Delete a managed object (using pipeline)
          beforeEach:
            - $mo = PSc8y\New-ManagedObject -Name "testMO"
          command: Get-ManagedObject -Id $mo.id | Remove-ManagedObject
          afterEach:
            - Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue

        - description: Delete a managed object and all child devices
          beforeEach:
            - $Device = PSc8y\New-TestDevice
            - $ChildDevice = PSc8y\New-TestDevice
            - PSc8y\Add-ManagedObjectChild -ChildType device -Id $Device.id -Child $ChildDevice.id
          command: Get-ManagedObject -Id $Device.id | Remove-ManagedObject -Cascade
          afterEach:
            - Remove-ManagedObject -Id $Device.id -ErrorAction SilentlyContinue
            - Remove-ManagedObject -Id $ChildDevice.id -ErrorAction SilentlyContinue

      go:
        - description: Delete a managed object
          command: c8y inventory delete --id 12345

        - description: Delete a managed object
          command: c8y inventory delete --id 12345 --cascade
        
        - description: Delete a device and its related device user
          command: c8y inventory delete --id 12345 --withDeviceUser
        
        - description: Delete a device and any related child assets, additions and/or devices
          command: c8y inventory delete --id 12345 --forceCascade

    pathParameters:
      - name: id
        type: '[]id'
        pipeline: true
        required: true
        description: ManagedObject id
        pipelineAliases:
          - "deviceId"
          - "source.id"
          - "managedObject.id"

    queryParameters:
      - name: cascade
        type: boolean
        description: When set to true and the managed object is a device or group, all the hierarchy will be deleted. 

      - name: forceCascade
        type: boolean
        description: When set to true all the hierarchy will be deleted without checking the type of managed object. It takes precedence over the parameter cascade.
      
      - name: withDeviceUser
        type: boolean
        description: When set to true and the managed object is a device, it deletes the associated device user (credentials).
