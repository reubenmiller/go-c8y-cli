# yaml-language-server: $schema=../schema.json
---
information:
  name: agents
  description: Cumulocity agents
  descriptionLong: 'REST endpoint to interact with Cumulocity agents'
  link: https://cumulocity.com/guides/reference/inventory/

endpoints:
  # Agent
  - name: listAgents
    description: Get agent collection
    descriptionLong: Get a collection of agents based on filter parameters
    method: GET
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.customAgent+json
    alias:
        go: list
        powershell: Get-AgentCollection
    examples:
      powershell:
        - description: Get a collection of agents with type "myType", and their names start with "sensor"
          skipTest: true
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Get-AgentCollection -Name "sensor*" -Type myType
          afterEach:
            - Remove-ManagedObject -Id $agent.id
      go:
        - description: Get a collection of agents with type "myType", and their names start with "sensor"
          command: c8y agents list --name "sensor*" --type myType

        - description: Get a collection of agents with names starting with "sensor" using a piped inventory query (or could be piped from a file)
          command: echo "name eq 'sensor*'" | c8y agents list

        - description: Get agents which where registered longer than 7 days ago
          command: c8y agents list --creationTimeDateFrom -7d

        - description: Get agents which where registered in the last day
          command: c8y agents list --creationTimeDateTo -1d

        - description: Find an agent by name, then find other agents which the same type
          command: c8y agents list --name "my example agent" --select type --output csv | c8y agents list --queryTemplate "type eq '%s'"
    
    queryParameters:
      - name: query
        description: Query expression group
        property: q
        type: queryExpression
        children:
          - name: query
            type: string
            description: Additional query filter
            format: (%s)
            pipeline: true
            pipelineAliases:
              - c8y_DeviceQueryString
          
          - name: queryTemplate
            type: string
            description: String template to be used when applying the given query. Use %s to reference the query/pipeline input
          
          - name: orderBy
            type: string
            description: Order by. e.g. _id asc or name asc or creationTime.date desc
          
          - name: agent
            type: stringStatic
            description: ""
            value: "(has(com_cumulocity_model_Agent))"

          - name: name
            type: string
            description: Filter by name
            format: (name eq '%s')

          - name: type
            type: string
            description: Filter by type
            format: (type eq '%s')

          - name: fragmentType
            type: string
            description: Filter by fragment type
            format: has(%s)

          - name: owner
            type: string
            description: Filter by owner
            format: (owner eq '%s')

          - name: availability
            type: string
            description: Filter by c8y_Availability.status
            format: (c8y_Availability.status eq '%s')
            validationSet:
              - AVAILABLE
              - UNAVAILABLE
              - MAINTENANCE

          - name: lastMessageDateTo
            type: datetime
            description: Filter c8y_Availability.lastMessage to a specific date
            format: (c8y_Availability.lastMessage le '%s')

          - name: lastMessageDateFrom
            type: datetime
            description: Filter c8y_Availability.lastMessage from a specific date
            format: (c8y_Availability.lastMessage ge '%s')

          - name: creationTimeDateTo
            type: datetime
            description: Filter creationTime.date to a specific date
            format: (creationTime.date le '%s')

          - name: creationTimeDateFrom
            type: datetime
            description: Filter creationTime.date from a specific date
            format: (creationTime.date ge '%s')

          - name: group
            type: '[]devicegroup'
            description: Filter by group inclusion
            format: bygroupid(%s)

      - name: withParents
        type: boolean
        description: Include a flat list of all parents and grandparents of the given object

  - name: getAgent
    description: 'Get agent'
    descriptionLong: Get an agent's managed object representation
    method: GET
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.customAgent+json
    alias:
        go: get
        powershell: Get-Agent
    examples:
      powershell:
        - description: Get agent by id
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Get-Agent -Id $agent.id
          afterEach:
            - Remove-ManagedObject -Id $agent.id

        - description: Get agent by name
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Get-Agent -Id $agent.name
          afterEach:
            - Remove-ManagedObject -Id $agent.id

      go:
        - description: Get agent by id
          command: c8y agents get --id 12345

    pathParameters:
      - name: id
        type: '[]agent'
        pipeline: true
        required: true
        description: Agent ID

  - name: updateAgent
    description: 'Update agent'
    descriptionLong: Update properties of an agent
    method: PUT
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.customAgent+json
    alias:
        go: update
        powershell: Update-Agent
    examples:
      powershell:
        - description: Update agent by id
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Update-Agent -Id $agent.id -NewName "MyNewName"
          afterEach:
            - Remove-ManagedObject -Id $agent.id

        - description: Update agent by name
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Update-Agent -Id $agent.name -NewName "MyNewName"
          afterEach:
            - Remove-ManagedObject -Id $agent.id

        - description: Update agent custom properties
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Update-Agent -Id $agent.name -Data @{ "myValue" = @{ value1 = $true } }
          afterEach:
            - Remove-ManagedObject -Id $agent.id

      go:
        - description: Update agent by id
          command: c8y agents update --id 12345

    pathParameters:
      - name: id
        type: '[]agent'
        pipeline: true
        required: true
        description: Agent ID

    body:
      - name: newName
        type: string
        property: name
        required: false
        description: Agent name

      - name: data
        type: json
        description: Additional properties of the inventory.

  - name: deleteAgent
    description: 'Delete agent'
    descriptionLong: |
      Delete an agent from the platform. This will delete all data associated to the agent
      (i.e. alarms, events, operations and measurements)
    method: DELETE
    path: inventory/managedObjects/{id}
    accept: ''
    alias:
        go: delete
        powershell: Remove-Agent
    examples:
      powershell:
        - description: Remove agent by id
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Remove-Agent -Id $agent.id

        - description: Remove agent by name
          beforeEach:
            - $agent = PSc8y\New-TestAgent
          command: Remove-Agent -Id $agent.name
        
        - description: Delete agent and related device user/credentials
          # Skipping as it requires a real device with credentials
          skipTest: true
          command: Remove-Agent -Id "agent01" -WithDeviceUser

      go:
        - description: Get agent by id
          command: c8y agents delete --id 12345
        
        - description: Get agent by name
          command: c8y agents delete --id agent01
          assertStdOut:
            json:
              path: r//inventory/managedObjects/\d+$

        - description: Delete agent and related device user/credentials
          command: c8y agents delete --id 12345 --withDeviceUser
          assertStdOut:
            json:
              method: DELETE
              path: /inventory/managedObjects/12345
              query: withDeviceUser=true

    pathParameters:
      - name: id
        type: '[]agent'
        pipeline: true
        required: true
        description: Agent ID

    queryParameters:
      - name: withDeviceUser
        type: boolean
        description: Delete associated device owner
        position: 11

      - name: cascade
        type: boolean
        description: Remove all child devices and child assets will be deleted recursively. By default, the delete operation is propagated to the subgroups only if the deleted object is a group
        position: 20

  - name: createAgent
    description: 'Create agent'
    descriptionLong: |
      Create an agent managed object. An agent is a special device managed object with both the
      c8y_IsDevice and com_cumulocity_model_Agent fragments.
    method: POST
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.customAgent+json
    alias:
        go: create
        powershell: New-Agent
    examples:
      powershell:
        - description: Create agent
          beforeEach:
            - $AgentName = PSc8y\New-RandomString -Prefix "myAgent"
          command: New-Agent -Name $AgentName
          afterEach:
            - Remove-Agent -Id $AgentName

        - description: Create agent with custom properties
          beforeEach:
            - $AgentName = PSc8y\New-RandomString -Prefix "myAgent"
          command: New-Agent -Name $AgentName -Data @{ myValue = @{ value1 = $true } }
          afterEach:
            - Remove-Agent -Id $AgentName

      go:
        - description: Create agent
          command: c8y agents create --name myAgent

        - description: Create agent with custom properties
          command: c8y agents create --name myAgent --data "custom_value1=1234"

    bodyTemplate:
      type: jsonnet
      applyLast: true
      template: "{c8y_IsDevice: {}, com_cumulocity_model_Agent: {}}"

    body:
      - name: name
        type: string
        pipeline: true
        required: false
        description: Agent name
        pipelineAliases:
          - "name"

      - name: type
        description: Agent type
        type: string

      - name: data
        type: json
        description: Custom agent properties.
    bodyRequiredKeys:
      - name
