# yaml-language-server: $schema=../schema.json
---
information:
  name: devicegroups
  description: Cumulocity device groups
  descriptionLong: 'REST endpoint to interact with Cumulocity device groups'
  link: https://cumulocity.com/guides/reference/inventory/

endpoints:

  - name: listDeviceGroups
    description: Get device group collection
    descriptionLong: Get a collection of device groups based on filter parameters
    method: GET
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.managedobjectcollection+json
    collectionType: application/vnd.com.nsn.cumulocity.customDeviceGroup+json
    collectionProperty: managedObjects
    alias:
        go: list
        powershell: Get-DeviceGroupCollection
    examples:
      powershell:
        - description: Get a collection of device groups with names that start with 'parent'
          command: Get-DeviceGroupCollection -Name "parent*"
      go:
        - description: Get a collection of device groups with names that start with 'parent'
          command: c8y devicegroups list --name "parent*"
          assertStdOut:
            contains:
              - name eq 'parent*'
              - (has(c8y_IsDeviceGroup))
    
    queryParameters:
      - name: query
        description: Query expression group
        property: query
        type: queryExpression
        children:
          - name: devicegroup
            type: stringStatic
            description: ""
            value: "(has(c8y_IsDeviceGroup))"
          
          - name: queryTemplate
            type: string
            description: String template to be used when applying the given query. Use %s to reference the query/pipeline input
          
          - name: orderBy
            type: string
            default: name
            description: Order by. e.g. _id asc or name asc or creationTime.date desc

          - name: query
            type: string
            description: Additional query filter
            format: "%s"
            pipeline: true
            pipelineAliases:
              - c8y_DeviceQueryString

          - name: name
            type: string
            description: Filter by name
            format: (name eq '%s')

          - name: type
            type: string
            description: Filter by type
            format: (type eq '%s')

          - name: fragmentType
            type: string
            description: Filter by fragment type
            format: has(%s)

          - name: owner
            type: string
            description: Filter by owner
            format: (owner eq '%s')

          - name: excludeRootGroup
            type: booleanDefault
            description: Filter by group inclusion
            value: not(type eq 'c8y_DeviceGroup')

          - name: group
            type: '[]devicegroup'
            description: Filter by group inclusion
            format: bygroupid(%s)

      - name: skipChildrenNames
        type: boolean
        description: Don't include the child devices names in the response. This can improve the API response because the names don't need to be retrieved

      - name: withChildren
        type: booleanDefault
        default: "false"
        description: Include names of child assets (only use where necessary as it is slow for large groups)

      - name: withChildrenCount
        type: boolean
        description: When set to true, the returned result will contain the total number of children in the respective objects (childAdditions, childAssets and childDevices)
      
      - name: withGroups
        type: boolean
        description: When set to true it returns additional information about the groups to which the searched managed object belongs. This results in setting the assetParents property with additional information about the groups.

      - name: withParents
        type: boolean
        description: Include a flat list of all parents and grandparents of the given object

  - name: getDeviceGroup
    description: Get device group
    descriptionLong: |
      Get a device group
    method: GET
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.customDeviceGroup+json
    alias:
        go: get
        powershell: Get-DeviceGroup
    examples:
      powershell:
        - description: Get device group by id
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Get-DeviceGroup -Id $group.id
          afterEach:
            - Remove-ManagedObject -Id $group.id

        - description: Get device group by name
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Get-DeviceGroup -Id $group.name
          afterEach:
            - Remove-ManagedObject -Id $group.id

      go:
        - description: Get device group by id
          command: c8y devicegroups get --id 12345

    pathParameters:
      - name: id
        type: '[]devicegroup'
        pipeline: true
        required: true
        description: Device group ID

  - name: updateDeviceGroup
    description: Update device group
    descriptionLong: |
      Update properties of an existing device group, for example name or any other custom properties.
    method: PUT
    path: inventory/managedObjects/{id}
    accept: application/vnd.com.nsn.cumulocity.customDeviceGroup+json
    alias:
        go: update
        powershell: Update-DeviceGroup
    examples:
      powershell:
        - description: Update device group by id
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Update-DeviceGroup -Id $group.id -Name "MyNewName"
          afterEach:
            - Remove-ManagedObject -Id $group.id

        - description: Update device group by name
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Update-DeviceGroup -Id $group.name -Name "MyNewName"
          afterEach:
            - Remove-ManagedObject -Id $group.id

        - description: Update device group custom properties
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Update-DeviceGroup -Id $group.name -Data @{ "myValue" = @{ value1 = $true } }
          afterEach:
            - Remove-ManagedObject -Id $group.id

      go:
        - description: Update device group by id
          command: c8y devicegroups update --id 12345

    pathParameters:
      - name: id
        type: '[]devicegroup'
        pipeline: true
        required: true
        description: Device group ID

    body:
      - name: name
        type: 'string'
        required: false
        description: Device group name

      - name: data
        type: json
        description: Additional properties of the inventory.

  - name: deleteDeviceGroup
    description: Delete device group
    descriptionLong: |
      Delete an existing device group, and optionally all of it's children
    method: DELETE
    path: inventory/managedObjects/{id}
    accept: ''
    alias:
        go: delete
        powershell: Remove-DeviceGroup
    examples:
      powershell:
        - description: Remove device group by id
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Remove-DeviceGroup -Id $group.id

        - description: Remove device group by name
          beforeEach:
            - $group = PSc8y\New-TestDeviceGroup
          command: Remove-DeviceGroup -Id $group.name

      go:
        - description: Get device group by id
          command: c8y devicegroups delete --id 12345

    pathParameters:
      - name: id
        type: '[]devicegroup'
        pipeline: true
        required: true
        description: Device group ID
        position: 10

    queryParameters:
      - name: cascade
        type: boolean
        description: Remove all child devices and child assets will be deleted recursively. By default, the delete operation is propagated to the subgroups only if the deleted object is a group
        position: 20

  - name: createDeviceGroup
    description: 'Create device group'
    descriptionLong: |
      Create a new device group to logically group one or more devices
    method: POST
    path: inventory/managedObjects
    accept: application/vnd.com.nsn.cumulocity.customDeviceGroup+json
    alias:
        go: create
        powershell: New-DeviceGroup
    examples:
      powershell:
        - description: Create device group
          beforeEach:
            - $GroupName = PSc8y\New-RandomString -Prefix "mygroup"
          command: New-DeviceGroup -Name $GroupName
          afterEach:
            - Remove-DeviceGroup -Id $GroupName

        - description: Create device group with custom properties
          beforeEach:
            - $GroupName = PSc8y\New-RandomString -Prefix "mygroup"
          command: New-DeviceGroup -Name $GroupName -Data @{ "myValue" = @{ value1 = $true } }
          afterEach:
            - Remove-DeviceGroup -Id $GroupName

      go:
        - description: Create device group
          command: c8y devicegroups create --name mygroup

        - description: Create device group with custom properties
          command: c8y devicegroups create --name mygroup --data "custom_value1=1234"

    bodyTemplate:
      type: jsonnet
      applyLast: false
      template: "{type: 'c8y_DeviceGroup', c8y_IsDeviceGroup: {}}"

    body:
      - name: name
        type: 'string'
        required: false
        pipeline: true
        description: Device group name
        pipelineAliases:
          - "name"

      - name: type
        description: Device group type (c8y_DeviceGroup (root folder) or c8y_DeviceSubGroup (sub folder)). Defaults to c8y_DeviceGroup
        type: string
        validationSet: [c8y_DeviceGroup, c8y_DeviceSubGroup]

      - name: data
        type: json
        description: Custom group properties.
    bodyRequiredKeys:
      - name

  # Inventory References
  - name: addDeviceToGroup
    method: POST
    path: inventory/managedObjects/{id}/childAssets
    accept: application/vnd.com.nsn.cumulocity.managedObjectReference+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    description: 'Assign device to group'
    descriptionLong: 'Assigns a device to a group. The device will be a childAsset of the group'
    hidden: true
    deprecated: "please use 'c8y devicegroups children assign --childType asset' instead"
    deprecatedAt: "2022-08-13"
    collectionProperty: managedObject
    alias:
        go: assignDevice
        powershell: Add-ChildDeviceToGroup
    powershell:
      deprecated: true
    examples:
        powershell:
          - description: Add a device to a group
            beforeEach:
              - $Device = PSc8y\New-TestDevice
              - $Group = PSc8y\New-TestDeviceGroup
            command: Add-ChildDeviceToGroup -Group $Group.id -NewChildDevice $Device.id
            skipTest: true
            afterEach:
              - PSc8y\Remove-ManagedObject -Id $Device.id
              - PSc8y\Remove-ManagedObject -Id $Group.id
        go:
          - description: Add a device to a group
            command: c8y devicegroups assignDevice --group 12345 --newChildDevice 43234
          
          - description: Add multiple devices to a group
            command: c8y devicegroups assignDevice --group 12345 --newChildDevice 43234,99292,12222

    pathParameters:
      - name: group
        type: '[]devicegroup'
        property: id
        required: true
        description: Group
    body:
      - name: newChildDevice
        type: '[]device'
        required: true
        pipeline: true
        property: 'managedObject.id'
        description: New device to be added to the group as an child asset

  - name: addGroupToGroup
    method: POST
    path: inventory/managedObjects/{id}/childAssets
    accept: application/vnd.com.nsn.cumulocity.managedObjectReference+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    description: Assign child group
    descriptionLong: 'Assigns a group to a group. The group will be a childAsset of the group'
    hidden: true
    deprecated: "please use 'c8y devicegroups children unassign --childType asset' instead"
    deprecatedAt: "2022-08-13"
    collectionProperty: managedObject
    alias:
        go: assignGroup
        powershell: Add-ChildGroupToGroup
    powershell:
      deprecated: true
    examples:
        powershell:
          - description: Add a group to a group as a child
            beforeEach:
              - $Group = PSc8y\New-TestDeviceGroup
              - $ChildGroup1 = PSc8y\New-TestDeviceGroup
            command: Add-ChildGroupToGroup -Group $Group.id -NewChildGroup $ChildGroup1.id
            skipTest: true
            afterEach:
              - PSc8y\Remove-ManagedObject -Id $ChildGroup1.id
              - PSc8y\Remove-ManagedObject -Id $Group.id

          - description: |
              Add multiple devices to a group. Alternatively `Get-DeviceCollection` can be used
              to filter for a collection of devices and assign the results to a single group.
            beforeEach:
              - $CustomGroup = PSc8y\New-TestDeviceGroup
              - $SubGroup1 = PSc8y\New-TestDeviceGroup -Type SubGroup
              - $SubGroup2 = PSc8y\New-TestDeviceGroup -Type SubGroup
            command: Get-DeviceGroup $SubGroup1.name, $SubGroup2.name | Add-ChildGroupToGroup -Group $CustomGroup.id
            skipTest: true
            afterEach:
              - PSc8y\Remove-ManagedObject -Id $SubGroup1.id
              - PSc8y\Remove-ManagedObject -Id $SubGroup2.id
              - PSc8y\Remove-ManagedObject -Id $CustomGroup.id
        go:
          - description: Add a group to a group
            command: c8y devicegroups assignGroup --group 12345 --newChildGroup 43234
          
          - description: Add multiple groups to a group
            command: c8y devicegroups assignGroup --group 12345 --newChildGroup 43234,99292,12222

    pathParameters:
      - name: group
        type: '[]devicegroup'
        property: id
        required: true
        description: Group
    body:
      - name: newChildGroup
        type: '[]devicegroup'
        pipeline: true
        required: true
        property: 'managedObject.id'
        description: New child group to be added to the group as an child asset

  - name: deleteDeviceFromGroup
    description: Unassign device from group
    descriptionLong: Unassign/delete a device from a group
    hidden: true
    deprecated: "please use 'c8y devicegroups children unassign --childType asset' instead"
    deprecatedAt: "2022-08-13"
    method: DELETE
    path: inventory/managedObjects/{group}/childAssets/{reference}
    accept: ''
    skip: false
    alias:
        go: unassignDevice
        powershell: Remove-DeviceFromGroup
    powershell:
      deprecated: true
    examples:
      powershell:
        - description: Unassign a child device from its parent asset
          beforeEach:
            - $Group = PSc8y\New-TestDeviceGroup
            - $ChildDevice = PSc8y\New-TestDevice
            - PSc8y\Add-ManagedObjectChild -ChildType asset -Id $Group.id -Child $ChildDevice.id
          command: Remove-DeviceFromGroup -Group $Group.id -ChildDevice $ChildDevice.id
          afterEach:
            - PSc8y\Remove-ManagedObject -Id $ChildDevice.id
            - PSc8y\Remove-ManagedObject -Id $Group.id

      go:
        - description: Unassign a child device from its parent device
          command: c8y devicegroups unassignDevice --group 12345 --childDevice 22553
    pathParameters:
      - name: group
        type: '[]devicegroup'
        required: true
        description: Asset id

      - name: childDevice
        type: '[]device'
        property: reference
        pipeline: true
        required: true
        description: Child device

  - name: deleteManagedObjectChildGroup
    description: Delete child group reference
    descriptionLong: Delete child group reference
    hidden: true
    deprecated: "please use 'c8y devicegroups children unassign --childType asset' instead"
    deprecatedAt: "2022-08-13"
    method: DELETE
    path: inventory/managedObjects/{id}/childAssets/{child}
    accept: ''
    alias:
        go: unassignGroup
        powershell: Remove-GroupFromGroup
    powershell:
      deprecated: true
    examples:
      powershell:
        - description: Unassign a child group from its parent
          beforeEach:
            - $Group = PSc8y\New-TestDeviceGroup
            - $ChildGroup = PSc8y\New-TestDevice
            - PSc8y\Add-ManagedObjectChild -ChildType asset -Id $Group.id -Child $ChildGroup.id
          command: Remove-GroupFromGroup -Id $Group.id -Child $ChildGroup.id
          afterEach:
            - PSc8y\Remove-ManagedObject -Id $ChildGroup.id
            - PSc8y\Remove-ManagedObject -Id $Group.id

      go:
        - description: Unassign a child device from its parent device
          command: c8y devicegroups unassignGroup --id 12345 --child 22553
    pathParameters:
      - name: id
        type: '[]devicegroup'
        required: true
        description: Device group

      - name: child
        type: '[]devicegroup'
        property: child
        required: true
        pipeline: true
        description: Child device group

  - name: listChildAssetCollection
    method: GET
    hidden: true
    deprecated: "please use 'c8y devicegroups children list --childType asset' instead"
    deprecatedAt: "2022-08-13"
    description: Get child asset collection
    descriptionLong: Get a collection of managedObjects child references
    path: inventory/managedObjects/{id}/childAssets
    accept: application/vnd.com.nsn.cumulocity.managedObjectReferenceCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: 'references.#.managedObject'
    alias:
        go: listAssets
        powershell: Get-DeviceGroupChildAssetCollection
    powershell:
      deprecated: true
    examples:
      powershell:
        - description: Get a list of the child assets of an existing device
          beforeEach:
            - $Device = PSc8y\New-TestDevice
            - $ChildDevice = PSc8y\New-TestDevice
            - PSc8y\Add-ManagedObjectChild -ChildType asset -Id $Device.id -Child $ChildDevice.id
          command: Get-DeviceGroupChildAssetCollection -Id $Group.id
          afterEach:
            - PSc8y\Remove-ManagedObject -Id $ChildDevice.id
            - PSc8y\Remove-ManagedObject -Id $Device.id

        - description: Get a list of the child assets of an existing group
          beforeEach:
            - $Group = PSc8y\New-TestDeviceGroup
            - $ChildGroup = PSc8y\New-TestDeviceGroup
            - PSc8y\Add-ManagedObjectChild -ChildType asset -Id $Group.id -Child $ChildGroup.id
          command: Get-DeviceGroupChildAssetCollection -Id $Group.id
          afterEach:
            - PSc8y\Remove-ManagedObject -Id $ChildGroup.id
            - PSc8y\Remove-ManagedObject -Id $Group.id

      go:
        - description: Get a list of the child devices of an existing device
          command: c8y devicegroups listAssets --id 12345
    pathParameters:
      - name: id
        type: '[]devicegroup'
        pipeline: true
        required: true
        description: Device Group.
