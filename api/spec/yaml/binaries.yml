
---

information:
  name: binaries
  description: Cumulocity binaries
  descriptionLong: 'REST endpoint to interact with Cumulocity binaries'
  link: https://cumulocity.com/guides/reference/binaries/

endpoints:
  - name: getBinaryCollection
    description: 'Get collection of inventory binaries'
    descriptionLong: >
      Get a list of inventory binaries. The results include the meta information about binary and not the binary itself.
    method: GET
    path: /inventory/binaries
    accept: application/vnd.com.nsn.cumulocity.managedObjectCollection+json
    collectionType: application/vnd.com.nsn.cumulocity.managedObject+json
    collectionProperty: managedObjects
    alias:
        go: list
        powershell: Get-BinaryCollection
    examples:
      powershell:
        - description: Get a list of binaries
          beforeEach:
            - $File = New-TestFile
            - $Binary = PSc8y\New-Binary -File $File
          command: Get-BinaryCollection -PageSize 100
          afterEach:
            - PSc8y\Remove-Binary -Id $Binary.id

      go:
        - description: Get a list of binaries
          command: c8y binaries list --pageSize 100

  - name: download
    description: 'Get binary'
    descriptionLong: >
      Download a binary stored in Cumulocity and display it on the console. For non text based binaries
      or if the output should be saved to file, the output parameter should be used to write the file directly to a local
      file.
    method: GET
    path: /inventory/binaries/{id}
    accept: '*/*'
    alias:
        go: get
        powershell: Get-Binary
    examples:
      powershell:
        - description: Get a binary and display the contents on the console
          beforeEach:
            - $File = New-TestFile
            - $Binary = PSc8y\New-Binary -File $File
          command: Get-Binary -Id $Binary.id
          afterEach:
            - PSc8y\Remove-Binary -Id $Binary.id

        - description: Get a binary and save it to a file
          beforeEach:
            - $File = New-TestFile
            - $Binary = PSc8y\New-Binary -File $File

          command: Get-Binary -Id $Binary.id -OutputFile ./download-binary1.txt
          afterEach:
            - if (Test-Path "./download-binary1.txt") { Remove-Item ./download-binary1.txt }
            - Remove-Item $File
            - PSc8y\Remove-Binary -Id $Binary.id

      go:
        - description: Get a binary and display the contents on the console
          command: c8y binaries get --id 12345

        - description: Get a binary and save it to a file
          command: c8y binaries get --id 12345 --outputFile "./download-binary1.txt"
    pathParameters:
      - name: id
        type: string
        required: true
        pipeline: true
        description: Inventory binary id

  - name: newBinary
    description: 'New inventory binary'
    descriptionLong: Upload a new binary to Cumulocity
    method: POST
    path: /inventory/binaries
    accept: application/vnd.com.nsn.cumulocity.managedObject+json
    alias:
        go: create
        powershell: New-Binary
    examples:
      powershell:
        - description: Upload a log file
          beforeEach:
            - $File = New-TestFile
            - $FileName = (Get-Item $File).Name
          command: New-Binary -File $File
          afterEach:
            - Remove-Item $File
            - Find-ManagedObjectCollection -Query "has(c8y_IsBinary) and (name eq '$FileName')" | Remove-Binary

      go:
        - description: Upload a log file
          command: c8y binaries create --file ./output.log

    body:
      - name: file
        type: file
        required: true
        description: File to be uploaded as a binary

  - name: updateBinary
    description: 'Update inventory binary'
    descriptionLong: >
      Update an existing binary
    method: PUT
    path: /inventory/binaries/{id}
    accept: application/vnd.com.nsn.cumulocity.managedObject+json
    alias:
        go: update
        powershell: Update-Binary
    examples:
      powershell:
        - description: Update an existing binary file
          beforeEach:
            - $File1 = New-TestFile
            - $File2 = New-TestFile
            - $Binary1 = New-Binary -File $File1
            - $FileName1 = (Get-Item $File1).Name
          command: Update-Binary -Id $Binary1.id -File $File2
          afterEach:
            - Remove-Item $File1
            - Remove-Item $File2
            - Find-ManagedObjectCollection -Query "has(c8y_IsBinary) and (name eq '$FileName1')" | Remove-Binary

      go:
        - description: Update an existing binary file
          command: c8y binaries update --id 12345 --file ./output.log
    pathParameters:
      - name: id
        type: string
        required: true
        pipeline: true
        description: Inventory binary id

    body:
      - name: file
        type: file
        required: true
        description: File to be uploaded as a binary

  - name: deleteBinary
    description: 'Delete binary'
    descriptionLong: Delete a binary from the tenant. This delete operation can not be undone.
    method: DELETE
    path: /inventory/binaries/{id}
    alias:
        go: deleteBinary
        powershell: Remove-Binary
    examples:
      powershell:
        - description: Delete a binary
          beforeEach:
            - $File = New-TestFile
            - $Binary = New-Binary -File $File
          command: Remove-Binary -Id $Binary.id
          afterEach:
            - Remove-Item $File

      go:
        - description: Delete a binary
          command: c8y binaries delete --id 12345
    pathParameters:
      - name: id
        type: string
        required: true
        pipeline: true
        description: Inventory binary id
