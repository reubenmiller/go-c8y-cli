{
  "information": {
    "name": "userRoles",
    "description": "Cumulocity user roles",
    "descriptionLong": "REST endpoint to interact with Cumulocity user roles",
    "link": "https://cumulocity.com/guides/reference/users/#group-reference-collection"
  },
  "endpoints": [
    {
      "name": "getRoleCollection",
      "description": "Get role collection",
      "descriptionLong": "Get collection of user roles",
      "method": "GET",
      "path": "/user/roles",
      "accept": "application/vnd.com.nsn.cumulocity.roleCollection+json",
      "collectionType": "application/vnd.com.nsn.cumulocity.role+json",
      "collectionProperty": "roles",
      "alias": {
        "go": "list",
        "powershell": "Get-RoleCollection"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a list of roles",
            "command": "Get-RoleCollection -PageSize 100"
          }
        ],
        "go": [
          {
            "description": "Get a list of roles",
            "command": "c8y userroles list --pageSize 100"
          }
        ]
      }
    },
    {
      "name": "addRoleToUser",
      "description": "Add Role to user",
      "descriptionLong": "Add a role to an existing user",
      "method": "POST",
      "path": "/user/{tenant}/users/{user}/roles",
      "accept": "application/vnd.com.nsn.cumulocity.roleReference+json",
      "alias": {
        "go": "addRoleToUser",
        "powershell": "Add-RoleToUser"
      },
      "examples": {
        "powershell": [
          {
            "description": "Add a role (ROLE_ALARM_READ) to a user",
            "beforeEach": [
              "$User = PSc8y\\New-TestUser -Name \"customUser_\""
            ],
            "command": "Add-RoleToUser -User $User.id -Role \"ROLE_ALARM_READ\"",
            "afterEach": [
              "PSc8y\\Remove-User -Id $User.id"
            ]
          },
          {
            "description": "Add a role to a user using wildcards",
            "beforeEach": [
              "$User = PSc8y\\New-TestUser -Name \"customUser_\""
            ],
            "command": "Add-RoleToUser -User \"customUser_*\" -Role \"*ALARM_*\"",
            "afterEach": [
              "PSc8y\\Remove-User -Id $User.id"
            ]
          },
          {
            "description": "Add a role to a user using wildcards (using pipeline)",
            "beforeEach": [
              "$User = PSc8y\\New-TestUser -Name \"customUser_\""
            ],
            "command": "Get-RoleCollection -PageSize 100 | Where-Object Name -like \"*ALARM*\" | Add-RoleToUser -User \"customUser_*\"",
            "afterEach": [
              "PSc8y\\Remove-User -Id $User.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Add a role (ROLE_ALARM_READ) to a user",
            "command": "c8y userroles addRoleToUser --user \"peterpi@example.com\" --role \"ROLE_ALARM_READ\"",
            "assertStdOut": {
              "json": {
                "body.role.self": "r/.*ROLE_ALARM_READ$"
              }
            }
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        },
        {
          "name": "user",
          "type": "[]user",
          "required": true,
          "description": "User prefix or full username"
        }
      ],
      "body": [
        {
          "name": "role",
          "type": "[]roleself",
          "pipeline": true,
          "property": "role.self",
          "description": "User role id",
          "pipelineAliases": [
            "self",
            "id"
          ]
        }
      ]
    },
    {
      "name": "deleteRoleFromUser",
      "description": "Unassign role from user",
      "descriptionLong": "Unassign/delete role from a user",
      "method": "DELETE",
      "path": "/user/{tenant}/users/{user}/roles/{role}",
      "alias": {
        "go": "deleteRoleFromUser",
        "powershell": "Remove-RoleFromUser"
      },
      "examples": {
        "powershell": [
          {
            "description": "Remove a role from the given user",
            "beforeEach": [
              "$User = PSc8y\\New-TestUser",
              "Add-RoleToUser -User $User.id -Role \"ROLE_MEASUREMENT_READ\""
            ],
            "command": "Remove-RoleFromUser -User $User.id -Role \"ROLE_MEASUREMENT_READ\"",
            "afterEach": [
              "PSc8y\\Remove-User -Id $User.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Remove a role from the given user",
            "command": "c8y userroles deleteRoleFromUser --user \"peterpi@example.com\" --role \"ROLE_MEASUREMENT_READ\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "user",
          "type": "[]user",
          "required": true,
          "description": "User"
        },
        {
          "name": "role",
          "type": "[]role",
          "required": true,
          "pipeline": true,
          "description": "Role name"
        },
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        }
      ]
    },
    {
      "name": "addRoleToGroup",
      "description": "Add role to user group",
      "descriptionLong": "Add a role to an existing user group",
      "method": "POST",
      "path": "/user/{tenant}/groups/{group}/roles",
      "accept": "application/vnd.com.nsn.cumulocity.roleReference+json",
      "alias": {
        "go": "addRoleToGroup",
        "powershell": "Add-RoleToGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Add a role to a group using wildcards",
            "beforeEach": [
              "$Group = New-TestUserGroup -Name \"customGroup1\"",
              "$NamePattern = $Group.name.Substring(0, $Group.name.length - 2)"
            ],
            "command": "Add-RoleToGroup -Group \"${NamePattern}*\" -Role \"*ALARM_*\"",
            "afterEach": [
              "PSc8y\\Remove-UserGroup -Id $Group.id"
            ]
          },
          {
            "description": "Add a role to a group using wildcards (using pipeline)",
            "beforeEach": [
              "$Group = New-TestUserGroup -Name \"customGroup1\"",
              "$NamePattern = $Group.name.Substring(0, $Group.name.length - 2)"
            ],
            "command": "Get-RoleCollection -PageSize 100 | Where-Object Name -like \"*ALARM*\" | Add-RoleToGroup -Group \"${NamePattern}*\"",
            "afterEach": [
              "PSc8y\\Remove-UserGroup -Id $Group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Add a role to the admin group",
            "command": "c8y userroles addRoleToGroup --group \"12345\" --role \"*ALARM*\"",
            "assertStdOut": {
              "json": {
                "body.role.self": "r/.*ALARM.*$"
              }
            }
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        },
        {
          "name": "group",
          "type": "[]usergroup",
          "required": true,
          "description": "Group ID"
        }
      ],
      "body": [
        {
          "name": "role",
          "type": "[]roleself",
          "pipeline": true,
          "required": true,
          "property": "role.self",
          "description": "User role id",
          "pipelineAliases": [
            "self",
            "id"
          ]
        }
      ]
    },
    {
      "name": "deleteRoleFromGroup",
      "description": "Unassign role from group",
      "descriptionLong": "Unassign/delete role from a group",
      "method": "DELETE",
      "path": "/user/{tenant}/groups/{group}/roles/{role}",
      "alias": {
        "go": "deleteRoleFromGroup",
        "powershell": "Remove-RoleFromGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Remove a role from the given user group",
            "beforeEach": [
              "$UserGroup = PSc8y\\New-TestUserGroup",
              "Add-RoleToGroup -Group $UserGroup.id -Role \"ROLE_MEASUREMENT_READ\""
            ],
            "command": "Remove-RoleFromGroup -Group $UserGroup.id -Role \"ROLE_MEASUREMENT_READ\"",
            "afterEach": [
              "PSc8y\\Remove-UserGroup -Id $UserGroup.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Remove a role from the given user group",
            "command": "c8y userroles deleteRoleFromGroup --group 12345 --role \"ROLE_MEASUREMENT_READ\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "group",
          "type": "[]usergroup",
          "required": true,
          "description": "Group id"
        },
        {
          "name": "role",
          "type": "[]role",
          "required": true,
          "pipeline": true,
          "description": "Role name, e.g. ROLE_TENANT_MANAGEMENT_ADMIN"
        },
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        }
      ]
    },
    {
      "name": "getRoleReferenceCollectionFromUser",
      "description": "Get role references from user",
      "descriptionLong": "Get collection of user role references from a user",
      "method": "GET",
      "path": "/user/{tenant}/users/{user}/roles",
      "accept": "application/vnd.com.nsn.cumulocity.roleReferenceCollection+json",
      "collectionType": "application/vnd.com.nsn.cumulocity.roleReference+json",
      "collectionProperty": "references",
      "alias": {
        "go": "getRoleReferenceCollectionFromUser",
        "powershell": "Get-RoleReferenceCollectionFromUser"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a list of role references for a user",
            "beforeEach": [
              "$User = New-TestUser",
              "Add-RoleToUser -User $User.id -Role \"ROLE_ALARM_READ\""
            ],
            "command": "Get-RoleReferenceCollectionFromUser -User $User.id",
            "afterEach": [
              "Remove-User -Id $User.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Get a list of role references for a user",
            "command": "c8y userroles getRoleReferenceCollectionFromUser --user \"peterpi@example.com\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        },
        {
          "name": "user",
          "type": "[]user",
          "required": true,
          "pipeline": true,
          "description": "User"
        }
      ]
    },
    {
      "name": "getRoleReferenceCollectionFromGroup",
      "description": "Get role references from user group",
      "descriptionLong": "Get collection of user role references from a group",
      "method": "GET",
      "path": "/user/{tenant}/groups/{group}/roles",
      "accept": "application/vnd.com.nsn.cumulocity.roleReferenceCollection+json",
      "collectionType": "application/vnd.com.nsn.cumulocity.roleReference+json",
      "collectionProperty": "references",
      "alias": {
        "go": "getRoleReferenceCollectionFromGroup",
        "powershell": "Get-RoleReferenceCollectionFromGroup"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a list of role references for a user group",
            "beforeEach": [
              "$Group = Get-UserGroupByName -Name \"devices\""
            ],
            "command": "Get-RoleReferenceCollectionFromGroup -Group $Group.id"
          }
        ],
        "go": [
          {
            "description": "Get a list of role references for a user group",
            "command": "c8y userroles getRoleReferenceCollectionFromGroup --group \"12345\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "position": 99,
          "description": "Tenant"
        },
        {
          "name": "group",
          "type": "[]usergroup",
          "required": true,
          "pipeline": true,
          "description": "Group id"
        }
      ]
    }
  ]
}
