{
  "information": {
    "name": "userGroups",
    "description": "Cumulocity user groups",
    "descriptionLong": "REST endpoint to interact with Cumulocity user groups",
    "link": "https://cumulocity.com/guides/reference/users/#user-reference-collection"
  },
  "endpoints": [
    {
      "name": "getGroupCollection",
      "description": "Get collection of (user) groups",
      "method": "GET",
      "path": "/user/{tenant}/groups",
      "accept": "application/vnd.com.nsn.cumulocity.groupCollection+json",
      "collectionType": "application/vnd.com.nsn.cumulocity.group+json",
      "collectionProperty": "groups",
      "alias": {
        "go": "list",
        "powershell": "Get-GroupCollection"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a list of user groups for the current tenant",
            "command": "Get-GroupCollection"
          }
        ],
        "go": [
          {
            "description": "Get a list of user groups for the current tenant",
            "command": "c8y userGroups list"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant"
        }
      ]
    },
    {
      "name": "newGroup",
      "description": "Create a new group",
      "method": "POST",
      "path": "/user/{tenant}/groups",
      "accept": "application/vnd.com.nsn.cumulocity.group+json",
      "alias": {
        "go": "create",
        "powershell": "New-Group"
      },
      "examples": {
        "powershell": [
          {
            "description": "Create a user group",
            "beforeEach": [
              "$GroupName = \"testgroup_\" + [guid]::NewGuid().Guid.Substring(1,10)"
            ],
            "command": "New-Group -Name \"$GroupName\"",
            "afterEach": [
              "Get-GroupByName -Name \"$GroupName\" | Remove-Group"
            ]
          }
        ],
        "go": [
          {
            "description": "Create a user group",
            "command": "c8y userGroups create --name customGroup1"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant",
          "position": 99
        }
      ],
      "body": [
        {
          "name": "name",
          "type": "string",
          "description": "Group name"
        }
      ]
    },
    {
      "name": "getGroup",
      "description": "Create a new group by id",
      "method": "GET",
      "path": "/user/{tenant}/groups/{id}",
      "accept": "application/vnd.com.nsn.cumulocity.group+json",
      "alias": {
        "go": "get",
        "powershell": "Get-Group"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a user group",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Get-Group -Id $Group.id",
            "afterEach": [
              "Remove-Group -Id $Group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Get a user group",
            "command": "c8y userGroups get --id 12345"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant",
          "position": 99
        },
        {
          "name": "id",
          "type": "[]usergroup",
          "pipeline": true,
          "description": "Group id"
        }
      ]
    },
    {
      "name": "getGroupByName",
      "description": "Get a group by name",
      "method": "GET",
      "path": "/user/{tenant}/groupByName/{name}",
      "accept": "application/vnd.com.nsn.cumulocity.group+json",
      "alias": {
        "go": "getByName",
        "powershell": "Get-GroupByName"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get user group by its name",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Get-GroupByName -Name $Group.name",
            "afterEach": [
              "Remove-Group -Id $Group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Get user group by its name",
            "command": "c8y userGroups getByName --name customGroup1"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant",
          "position": 99
        },
        {
          "name": "name",
          "type": "string",
          "description": "Group name"
        }
      ]
    },
    {
      "name": "deleteGroup",
      "description": "Delete a new group",
      "method": "DELETE",
      "path": "/user/{tenant}/groups/{id}",
      "alias": {
        "go": "delete",
        "powershell": "Remove-Group"
      },
      "examples": {
        "powershell": [
          {
            "description": "Delete a user group",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Remove-Group -Id $Group.id"
          },
          {
            "description": "Delete a user group (using pipeline)",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Get-GroupByName -Name $Group.name | Remove-Group"
          }
        ],
        "go": [
          {
            "description": "Delete a user group",
            "command": "c8y userGroups delete --id 12345"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant",
          "position": 99
        },
        {
          "name": "id",
          "type": "[]usergroup",
          "required": true,
          "pipeline": true,
          "description": "Group id"
        }
      ]
    },
    {
      "name": "updateGroup",
      "description": "Update a new group",
      "method": "PUT",
      "path": "/user/{tenant}/groups/{id}",
      "alias": {
        "go": "update",
        "powershell": "Update-Group"
      },
      "examples": {
        "powershell": [
          {
            "description": "Update a user group",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Update-Group -Id $Group -Name \"customGroup2\"",
            "afterEach": [
              "Remove-Group -Id $Group.id"
            ]
          },
          {
            "description": "Update a user group (using pipeline)",
            "beforeEach": [
              "$Group = New-TestGroup"
            ],
            "command": "Get-GroupByName -Name $Group.name | Update-Group -Name \"customGroup2\"",
            "afterEach": [
              "Remove-Group -Id $Group.id"
            ]
          }
        ],
        "go": [
          {
            "description": "Update a user group",
            "command": "c8y userGroups update --id 12345 --name \"customGroup2\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "tenant",
          "type": "tenant",
          "description": "Tenant",
          "position": 99
        },
        {
          "name": "id",
          "type": "[]usergroup",
          "required": true,
          "pipeline": true,
          "description": "Group id"
        }
      ],
      "body": [
        {
          "name": "name",
          "type": "string",
          "description": "name"
        }
      ]
    }
  ]
}