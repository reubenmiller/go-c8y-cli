{
  "information": {
    "name": "software/versions",
    "description": "Cumulocity software version management",
    "descriptionLong": "REST endpoint to interact with Cumulocity software versions",
    "link": "https://cumulocity.com/guides/reference/inventory/"
  },
  "endpoints": [
    {
      "name": "getSoftwareVersionCollection",
      "method": "GET",
      "description": "Get software package version collection",
      "descriptionLong": "Get a collection of software package versions (managedObjects) based on filter parameters",
      "path": "inventory/managedObjects?query=$filter=((not(has(c8y_Patch)))%20and%20(bygroupid({softwareId})))%20$orderby=creationTime.date%20desc,creationTime%20desc",
      "accept": "application/vnd.com.nsn.cumulocity.managedObjectCollection+json",
      "collectionType": "application/vnd.com.nsn.cumulocity.managedObject+json",
      "collectionProperty": "managedObjects",
      "alias": {
        "go": "list",
        "powershell": "Get-SoftwareVersionCollection"
      },
      "examples": {
        "powershell": [
          {
            "description": "Get a list of software package versions",
            "command": "Get-SoftwareVersionCollection"
          }
        ],
        "go": [
          {
            "description": "Get a list of software package versions",
            "command": "c8y software versions list"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "softwareId",
          "type": "[]software",
          "pipeline": true,
          "required": false,
          "pipelineAliases": [
            "additionParents.references.0.managedObject.id",
            "id"
          ],
          "description": "Software package id"
        }
      ],
      "queryParameters": [
        {
          "name": "type",
          "type": "string",
          "default": "c8y_SoftwareBinary",
          "validationSet": [
            "c8y_SoftwareBinary"
          ],
          "static": true,
          "description": "Software version type"
        },
        {
          "name": "withParents",
          "type": "booleanDefault",
          "description": "Include parent references",
          "default": "true"
        }
      ]
    },
    {
      "name": "newSoftwareVersion",
      "method": "POST",
      "path": "inventory/managedObjects/{softwareId}/childAdditions",
      "accept": "application/vnd.com.nsn.cumulocity.inventory+json",
      "contentType": "application/vnd.com.nsn.cumulocity.managedObject+json",
      "description": "Create software package version",
      "descriptionLong": "Create a new software package (managedObject)",
      "alias": {
        "go": "create",
        "powershell": "New-SoftwareVersion"
      },
      "examples": {
        "powershell": [
          {
            "description": "Create a new version to an existing software package",
            "beforeEach": [
              "$type = New-RandomString -Prefix \"customType_\""
            ],
            "command": "New-ManagedObject -Name \"python3-requests\" -Description \"python requests library\" -Data @{$type=@{}}",
            "afterEach": [
              "Get-ManagedObjectCollection -FragmentType $type | Remove-ManagedObject"
            ]
          }
        ],
        "go": [
          {
            "description": "Create a new version to an existing software package",
            "command": "c8y software create --name \"python3-requests\" --description \"python requests library\""
          }
        ]
      },
      "pathParameters": [
        {
          "name": "softwareId",
          "type": "[]software",
          "required": false,
          "description": "Software package id where the version will be added to",
          "pipeline": true,
          "pipelineAliases": [
            "additionParents.references.0.managedObject.id",
            "id"
          ]
        }
      ],
      "body": [
        {
          "name": "version",
          "type": "string",
          "required": false,
          "description": "Software package version name, i.e. 1.0.0",
          "property": "c8y_Software.version"
        },
        {
          "name": "url",
          "type": "string",
          "required": false,
          "description": "URL to the software package",
          "property": "c8y_Software.url"
        },
        {
          "name": "file",
          "type": "binaryUploadURL",
          "description": "File to be uploaded",
          "property": "c8y_Software.url"
        },
        {
          "name": "data",
          "type": "json",
          "description": "Additional properties of the software package."
        }
      ],
      "bodyTemplate": {
        "type": "jsonnet",
        "applyLast": false,
        "template": "{type: 'c8y_SoftwareBinary', c8y_Global:{}}"
      },
      "bodyRequiredKeys": [
        "type"
      ]
    },
    {
      "name": "deleteSoftwareVersion",
      "description": "Delete software package version",
      "descriptionLong": "Delete an existing software package version",
      "method": "DELETE",
      "path": "inventory/managedObjects/{id}",
      "accept": "",
      "alias": {
        "go": "delete",
        "powershell": "Remove-SoftwareVersion"
      },
      "examples": {
        "powershell": [
          {
            "description": "Delete a software package",
            "beforeEach": [
              "$mo = PSc8y\\New-ManagedObject -Name \"testMO\""
            ],
            "command": "Remove-Software -Id $mo.id",
            "afterEach": [
              "Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue"
            ]
          },
          {
            "description": "Delete a software package (using pipeline)",
            "beforeEach": [
              "$mo = PSc8y\\New-ManagedObject -Name \"testMO\""
            ],
            "command": "Get-ManagedObject -Id $mo.id | Remove-Software",
            "afterEach": [
              "Remove-ManagedObject -Id $mo.id -ErrorAction SilentlyContinue"
            ]
          },
          {
            "description": "Delete a software package and all related versions",
            "beforeEach": [
              "$Device = PSc8y\\New-TestDevice",
              "$ChildDevice = PSc8y\\New-TestDevice",
              "PSc8y\\Add-ChildDeviceToDevice -Device $Device.id -NewChild $ChildDevice.id"
            ],
            "command": "Get-ManagedObject -Id $Device.id | Remove-Software -Cascade",
            "afterEach": [
              "Remove-ManagedObject -Id $Device.id -ErrorAction SilentlyContinue",
              "Remove-ManagedObject -Id $ChildDevice.id -ErrorAction SilentlyContinue"
            ]
          }
        ],
        "go": [
          {
            "description": "Delete a software package and all related versions",
            "command": "c8y software versions delete --id 12345"
          },
          {
            "description": "Delete a software package (but keep any child binaries)",
            "command": "c8y software versions delete --id 12345 --forceCascade=false"
          }
        ]
      },
      "pathParameters": [
        {
          "name": "id",
          "type": "[]softwareversion",
          "pipeline": true,
          "required": true,
          "description": "Software Package version (managedObject) id"
        },
        {
          "name": "softwareId",
          "type": "[]software",
          "required": false,
          "description": "Software package id (used to help completion be more accurate)"
        }
      ],
      "queryParameters": [
        {
          "name": "forceCascade",
          "type": "booleanDefault",
          "default": "true",
          "description": "Remove version and any related binaries"
        }
      ]
    }
  ]
}