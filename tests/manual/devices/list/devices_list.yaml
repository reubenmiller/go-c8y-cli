# yaml-language-server: $schema=https://raw.githubusercontent.com/reubenmiller/commander/feat/handle-nested-files/schema.json
config:
  env:
    C8Y_SETTINGS_DEFAULTS_CACHE: true
    C8Y_SETTINGS_CACHE_METHODS: GET POST PUT
    C8Y_SETTINGS_DEFAULTS_CACHETTL: 100h
    C8Y_SETTINGS_DEFAULTS_OUTPUT: json

tests:
  It can build an inventory query via piped input:
    command: |
      echo "type1" | c8y devices list --queryTemplate "type eq '%s'" --dry |
        c8y util show --select query --output csv
    exit-code: 0
    stdout:
      exactly: |
        q=$filter=type eq 'type1' $orderby=name

  It finds devices by name:
    command: |
      c8y devices list --name "*My Custom Device*" --pageSize 5 --dry |
        c8y util show --select method,path,body,query --compact=false
    exit-code: 0
    stdout:
      exactly: |
        {
          "method": "GET",
          "path": "/inventory/managedObjects",
          "query": "q=$filter=(name eq '*My Custom Device*') $orderby=name"
        }

  It finds devices by name and sort by creation time (descending):
    command: |
      c8y devices list --name "*My Custom Device*" --orderBy "creationTime desc" --pageSize 5 --dry |
        c8y util show --select method,pathEncoded,body,query --compact=false
    exit-code: 0
    stdout:
      exactly: |
        {
          "method": "GET",
          "pathEncoded": "/inventory/managedObjects?q=%24filter%3D%28name+eq+%27%2AMy+Custom+Device%2A%27%29+%24orderby%3DcreationTime+desc",
          "query": "q=$filter=(name eq '*My Custom Device*') $orderby=creationTime desc"
        }

  It finds devices by name and sort by creation time (ascending):
    command: |
      c8y devices list --name "*My Custom Device*" --orderBy "creationTime asc" --pageSize 5 --dry |
        c8y util show --select method,pathEncoded,body,query --compact=false
    exit-code: 0
    stdout:
      exactly: |
        {
          "method": "GET",
          "pathEncoded": "/inventory/managedObjects?q=%24filter%3D%28name+eq+%27%2AMy+Custom+Device%2A%27%29+%24orderby%3DcreationTime+asc",
          "query": "q=$filter=(name eq '*My Custom Device*') $orderby=creationTime asc"
        }

  ? It optimizes the inventory query when using retrieving all devices via includeAll flag
  : command: |
      c8y devices list --includeAll --dry |
        c8y util show --select method,pathEncoded,body,query --compact=false
    exit-code: 0
    stdout:
      exactly: |
        {
          "method": "GET",
          "pathEncoded": "/inventory/managedObjects?pageSize=2000&q=%24filter%3D%28_id+gt+%270%27%29+%24orderby%3D_id+asc",
          "query": "pageSize=2000&q=$filter=(_id gt '0') $orderby=_id asc"
        }
  
  It can build an inventory query via piped input and optional value:
    command: |
      echo "type1" | c8y devices list --queryTemplate "type eq '%s'" --agents --dry |
        c8y util show --select query -o csv
    exit-code: 0
    stdout:
      exactly: |
        q=$filter=has(com_cumulocity_model_Agent) and type eq 'type1' $orderby=name

  It filters devices by availability:
    command: |
      c8y devices list --group 12345 --availability AVAILABLE --lastMessageDateTo -10d --lastMessageDateFrom -5d --dry |
        c8y util show --select query
    exit-code: 0
    stdout:
      contains:
        - bygroupid(12345)
        - c8y_Availability.status eq 'AVAILABLE'
        - c8y_Availability.lastMessage le '
        - c8y_Availability.lastMessage ge '
