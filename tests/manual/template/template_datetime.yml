# yaml-language-server: $schema=https://raw.githubusercontent.com/reubenmiller/commander/feat/handle-nested-files/schema.json
# AddDateTime Function
config:
  env:
    C8Y_SETTINGS_DEFAULTS_OUTPUT: json
    C8Y_SETTINGS_DEFAULTS_COMPACT: false
tests:
  It adds a relative time to an existing time:
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', '10s')}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-06-29T09:05:24.000+02:00"
        }

  It supports adding a random offset in seconds (positive):
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', 10)}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-06-29T09:05:24.000+02:00"
        }

  It supports adding a random offset in seconds (negative):
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', -20)}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-06-29T09:04:54.000+02:00"
        }

  It supports subtracting a relative offset:
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', '-10s')}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-06-29T09:05:04.000+02:00"
        }
  
  It supports custom time format string (go style):
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', '-30d', '2006-01-02')}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-05-30"
        }

  It supports formatting as utc:
    command: |
      c8y template execute --template "{time: _.Date('Thu Jun 29 09:05:14 CEST 2023', utc=true)}" -c=false

    exit-code: 0
    stdout:
      exactly: |
        {
          "time": "2023-06-29T07:05:14.000Z"
        }
