# yaml-language-server: $schema=https://raw.githubusercontent.com/reubenmiller/commander/feat/handle-nested-files/schema.json
config:
  env:
    C8Y_SETTINGS_DEFAULTS_CACHE: true
    C8Y_SETTINGS_CACHE_METHODS: GET POST PUT
    C8Y_SETTINGS_DEFAULTS_CACHETTL: 100h
    C8Y_SETTINGS_DEFAULTS_OUTPUT: csv


tests:
  It filters by wildcards:
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "type like *c8yci_Example*" --select id
      
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "type -like *c8yci_Example*" --select id
    exit-code: 0
    stdout:
      line-count: 4
      lines:
        1: '1'
        2: '2'
        3: '1'
        4: '2'
  
  It filters by negated wildcards:
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "id notlike 1*" --select id
      
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "id -notlike 1*" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '2'
        2: '2'
  
  It filters by regex:
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "type match c8yci_.+[a-z0-9]*" --select id
      
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "type -match c8yci_.+[a-z0-9]*" --select id
    exit-code: 0
    stdout:
      line-count: 4
      lines:
        1: '1'
        2: '2'
        3: '1'
        4: '2'
  
  It filters by negated regex:
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "id notmatch 1x?" --select id
      
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "id -notmatch 1x?" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '2'
        2: '2'

  It filters by array length greater than:
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lengt 0" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by array length greater than or equal to (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lengte 3" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by array length greater than or equal to (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lengte 4" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by array length less than (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lenlt 4" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by array length less than (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lenlt 3" --select id
    exit-code: 0
    stdout:
      line-count: 0

  It filters by array length less than or equal to (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lenlte 3" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by array length less than or equal to (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "values lenlte 2" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Greater than
  #
  It filters by int - greater than (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gt 99" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - greater than (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gt 98.5000001" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - greater than (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gt 101" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by int - greater than (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gt 100.5" --select id
    exit-code: 0
    stdout:
      line-count: 0

  #
  # Greater than or equal to
  #
  It filters by int - greater than or equal to (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gte 100" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - greater than or equal to (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gte 99.1" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - greater than or equal to (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gte 101" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by int - greater than or equal to (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue gte 100.5" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Less than
  #
  It filters by int - less than (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lt 101" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - less than (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lt 100.10001" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - less than (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lt 99.99999" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by int - less than (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lt 90" --select id
    exit-code: 0
    stdout:
      line-count: 0

  #
  # Less than or equal to
  #
  It filters by int - less than or equal to (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lte 100" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - less than or equal to (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lte 101.5" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by int - less than or equal to (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lte -99.5" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by int - less than or equal to (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "intValue lte 99.999" --select id
    exit-code: 0
    stdout:
      line-count: 0

  #
  # Floats
  #
  #
  # Greater than
  #
  It filters by float - greater than (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue gt 1" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by float - greater than (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue gt 1.1" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by float - greater than (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue gt 2" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by float - greater than (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue gt 1.3" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Less than
  #
  It filters by float - less than (match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue lt 2" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by float - less than (match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue lt 1.3" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by float - less than (no match int):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue lt 1" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  It filters by float - less than (no match float):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "floatValue lt 1.1" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # String length
  #
  #
  # Equal to
  #
  It filters by string length - equal to (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name leneq 8" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by string length - equal to (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name leneq 9" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Greater than
  #
  It filters by string length - greater than (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lengt 7" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by string length - greater than (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lengt 8" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Greater than or equal to
  #
  It filters by string length - greater than or equal to (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lengte 8" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by string length - greater than or equal to (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lengte 9" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Less than
  #
  It filters by string length - less than (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lenlt 9" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by string length - less than (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lenlt 10" --select id
    exit-code: 0
    stdout:
      line-count: 0
  
  #
  # Less than or equal to
  #
  It filters by string length - less than or equal to (match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lenlte 10" --select id
    exit-code: 0
    stdout:
      line-count: 2
      lines:
        1: '1'
        2: '2'
  
  It filters by string length - less than or equal to (no match):
    command: |
      cat manual/common/filter/input.jsonl |
        c8y util show --filter "name lenlte 9" --select id
    exit-code: 0
    stdout:
      line-count: 0

  #
  # Misc.
  #
  It filters with a non-existent value do not match:
    command: |
      echo '{"name": "3_0_0_Software Version"}' | c8y util show --filter "non-existent like 3_0*"
    exit-code: 0
    stdout:
      line-count: 0
      match-pattern: "^$"
